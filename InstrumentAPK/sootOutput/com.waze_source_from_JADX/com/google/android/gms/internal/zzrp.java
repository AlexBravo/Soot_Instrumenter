package com.google.android.gms.internal;

import android.support.annotation.NonNull;
import com.google.android.gms.common.api.OptionalPendingResult;
import com.google.android.gms.common.api.PendingResult;
import com.google.android.gms.common.api.PendingResult.zza;
import com.google.android.gms.common.api.Result;
import com.google.android.gms.common.api.ResultCallback;
import com.google.android.gms.common.api.ResultStore;
import com.google.android.gms.common.api.ResultTransform;
import com.google.android.gms.common.api.TransformedResult;
import dalvik.annotation.Signature;
import java.util.concurrent.TimeUnit;

/* compiled from: dalvik_source_com.waze.apk */
public final class zzrp<R extends Result> extends OptionalPendingResult<R> {
    private final zzqm<R> FU;

    public zzrp(@Signature({"(", "Lcom/google/android/gms/common/api/PendingResult", "<TR;>;)V"}) PendingResult<R> $r1) throws  {
        if ($r1 instanceof zzqm) {
            this.FU = (zzqm) $r1;
            return;
        }
        throw new IllegalArgumentException("OptionalPendingResult can only wrap PendingResults generated by an API call.");
    }

    public R await() throws  {
        return this.FU.await();
    }

    public R await(@Signature({"(J", "Ljava/util/concurrent/TimeUnit;", ")TR;"}) long $l0, @Signature({"(J", "Ljava/util/concurrent/TimeUnit;", ")TR;"}) TimeUnit $r1) throws  {
        return this.FU.await($l0, $r1);
    }

    public void cancel() throws  {
        this.FU.cancel();
    }

    public R get() throws  {
        if (isDone()) {
            return await(0, TimeUnit.MILLISECONDS);
        }
        throw new IllegalStateException("Result is not available. Check that isDone() returns true before calling get().");
    }

    public boolean isCanceled() throws  {
        return this.FU.isCanceled();
    }

    public boolean isDone() throws  {
        return this.FU.isReady();
    }

    public void setResultCallback(@Signature({"(", "Lcom/google/android/gms/common/api/ResultCallback", "<-TR;>;)V"}) ResultCallback<? super R> $r1) throws  {
        this.FU.setResultCallback($r1);
    }

    public void setResultCallback(@Signature({"(", "Lcom/google/android/gms/common/api/ResultCallback", "<-TR;>;J", "Ljava/util/concurrent/TimeUnit;", ")V"}) ResultCallback<? super R> $r1, @Signature({"(", "Lcom/google/android/gms/common/api/ResultCallback", "<-TR;>;J", "Ljava/util/concurrent/TimeUnit;", ")V"}) long $l0, @Signature({"(", "Lcom/google/android/gms/common/api/ResultCallback", "<-TR;>;J", "Ljava/util/concurrent/TimeUnit;", ")V"}) TimeUnit $r2) throws  {
        this.FU.setResultCallback($r1, $l0, $r2);
    }

    public void store(ResultStore $r1, int $i0) throws  {
        this.FU.store($r1, $i0);
    }

    @NonNull
    public <S extends Result> TransformedResult<S> then(@NonNull @Signature({"<S::", "Lcom/google/android/gms/common/api/Result;", ">(", "Lcom/google/android/gms/common/api/ResultTransform", "<-TR;+TS;>;)", "Lcom/google/android/gms/common/api/TransformedResult", "<TS;>;"}) ResultTransform<? super R, ? extends S> $r1) throws  {
        return this.FU.then($r1);
    }

    public void zza(zza $r1) throws  {
        this.FU.zza($r1);
    }

    public Integer zzasb() throws  {
        return this.FU.zzasb();
    }

    public void zzhp(int $i0) throws  {
        this.FU.zzhp($i0);
    }
}
